general:
  train_mode: true
  task: "instance_segmentation"
  initial_weights_path: "pretrained_weights.ckpt"
  seed: null
  checkpoint: null
  backbone_checkpoint: null
  freeze_backbone: false # train only last layer
  train_on_segments: false
  eval_on_segments: false
  filter_out_instances: false
  save_visualizations: false
  visualization_point_size: 20
  decoder_id: -1
  export: false
  use_dbscan: false
  ignore_class_threshold: 100 # seemingly unused
  project_name: mask3d
  workspace: mask3d
  experiment_name: DEBUG
  num_targets: 2
  add_instance: true
  dbscan_eps: 0.95
  dbscan_min_points: 1


  export_threshold: 0.0001

  reps_per_epoch: 1

  on_crops: false

  scores_threshold: 0.0
  iou_threshold: 1.0

  area: 5

  eval_inner_core: -1 # disabled
  topk_per_image: 100 # seemingly unused

  ignore_mask_idx: []

  max_batch_size: 99999999

  save_dir: saved/${general.experiment_name}
  # time/commit/md5(config)_uuid
  # time/experiment_id/version_uuid
  # experiment_id: 1 # commit[:8], or unique from logger
  # version: 1 # md5[:8] of config

  gpus: 1

defaults:
  - data: papyrus
  - data/data_loaders: simple_loader
  - data/datasets: papyrus_dataset
  - data/collation_functions: voxelize_collate_papyrus
  - logging: full
  - model: mask3d
  - metrics: miou
  - optimizer: adamw
  - scheduler: exponentiallr
  - trainer: trainer600
  - callbacks: callbacks_instance_segmentation
  - matcher: hungarian_matcher
  - loss: set_criterion

hydra:
  run:
    dir: saved/hydra_logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: saved/hydra_logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}_${hydra.job.id}
